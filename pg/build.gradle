import java.nio.file.CopyOption
import java.nio.file.Files
import java.nio.file.Paths
import java.nio.file.StandardCopyOption
import static ExtraFunctions.*

plugins {
    id "biz.aQute.bnd.builder" version "7.0.0"
}

jar.archiveBaseName = "bcpg-lts${vm_range}"

sourceSets {
    java9 {
        java {
            srcDirs = ['src/main/jdk1.9']
        }
    }
}

dependencies {
    implementation project(':prov')
    implementation project(':util')

    implementation files("$lts_prov")
    implementation files("$lts_util")
    implementation project(path: ':core')
    java9Implementation project(':prov')
    java9Implementation project(':util')
    java9Implementation files(sourceSets.main.output.classesDirs) {
        builtBy compileJava
    }
}

compileJava {
    options.release = 8
}

compileJava9Java {
    options.release = 9

    options.compilerArgs += [
            '--module-path', "$lts_prov:$lts_util"
    ]
    options.sourcepath = files(['src/main/java', 'src/main/jdk1.9'])
}

jar {
    from sourceSets.main.output
    into('META-INF/versions/9') {
        from sourceSets.java9.output
    }
    manifest.attributes('Multi-Release': 'true')
    manifest.attributes('Bundle-RequiredExecutionEnvironment': 'JavaSE-1.8')
    manifest.attributes('Export-Package': 'org.bouncycastle.{apache|bcpg|gpg|openpgp}.*')
    manifest.attributes('Import-Package': 'java.*;resolution:=optional;javax.*;resolution:=optional;org.bouncycastle.*;version="[2.73,2.74)"')
}

task sourcesJar(type: Jar) {
    archiveBaseName = jar.archiveBaseName
    archiveClassifier = 'sources'
    from sourceSets.main.allSource
    into('META-INF/versions/9') {
        from sourceSets.java9.allSource
    }
    dependsOn(':prov:jar')
    dependsOn(':util:jar')
}

javadoc {
    title = "Bouncy Castle Library (LTS Edition) ${version} OpenPGP API"
    options.windowTitle = "Bouncy Castle Library (LTS Edition) ${version} OpenPGP API"
    options.overview = "overview.html"
    dependsOn(':prov:jar')
    dependsOn(':util:jar')
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveBaseName = jar.archiveBaseName
    archiveClassifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives jar
    archives javadocJar
    archives sourcesJar
}

task('copyJars', type: Copy) {
    from new File(projectDir, "build/libs")
    into new File(rootDir, "../bc-lts-java-jars/${version}/")
}

checkstyleMain {
    dependsOn(':prov:jar')
    dependsOn(':util:jar')
}

compileTestJava {
    dependsOn(':prov:jar')
    dependsOn(':util:jar')
}